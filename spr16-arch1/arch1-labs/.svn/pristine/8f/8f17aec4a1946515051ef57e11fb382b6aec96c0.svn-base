Exercise 4-14: Define a macro swap(t,x,y) that interchanges two
arguments of type t. (Block structure will help.)
	  >> Taking the approach of utilizing sizeof to ensure their
length in bits will be equal, we can swap if this is true. So, my
define will check if they are the same size in bits (long=long,
int=int, etc.) and only then will I swap. My test cases include int
for all 3, long for all 3, and then t and x are int, and y is
short. This last case should not work. All tests work out fine (after
realizing some silly errors.)

Exercise 2: You have been provided with 5 files
	 - swap.h: this includes a swap macro that swaps 2 integers
	 - quicksort.c: this includes a definition of a recursive
	   quicksort()
	 - quicksort.h: this includes a declaration for the quicksort
	   defined in quicksort.c
	 - test_driver.c: a sorting test program
	   -- the sorting function is selected by a macro named
	      "SORT"
	   -- SORT should be #defined to be the name of the function
	      that sorts and whose declaration is in a file name
	      SORT.h
	 - Makefile: a makefile with appropriate rulesfor compiling
	   quicksort.o and linking it to the result of compiling
	   test_driver.c with "SORT" defined to be "quicksort"
This is done by compiling test_driver.c using gcc's -D option
"-DSORT=quicksort" which has the same effect as adding a "#define
SORT quicksort" to the top of test_driver.c